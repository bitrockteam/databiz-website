{"version":3,"sources":["webpack:///./node_modules/timeline/src/js/timeline.js"],"names":["timeline","collection","options","timelines","warningLabel","resizeTimer","winWidth","window","innerWidth","currentIndex","defaultSettings","forceVerticalMode","type","defaultValue","horizontalStartPosition","acceptedValues","mode","moveItems","startIndex","verticalStartPosition","verticalTrigger","visibleItems","itemWrap","el","wrapper","classes","classList","add","parentNode","insertBefore","appendChild","isElementInViewport","triggerPosition","rect","getBoundingClientRect","windowHeight","innerHeight","document","documentElement","clientHeight","defaultTrigger","match","triggerUnit","unit","triggerValue","value","trigger","console","warn","parseInt","top","left","clientWidth","height","width","addTransforms","transform","style","webkitTransform","msTransform","timelinePosition","tl","str","items","offsetLeft","scroller","setUpHorinzontalTimeline","settings","timelineEl","itemWidth","wrap","offsetWidth","forEach","item","scrollerWidth","length","oddIndexTallest","evenIndexTallest","i","offsetHeight","transformString","setHeights","setHeightandWidths","prevArrow","createElement","nextArrow","topPosition","className","textContent","disabled","addNavigation","divider","querySelector","removeChild","horizontalDivider","addHorizontalDivider","navArrows","querySelectorAll","arrowPrev","arrowNext","maxIndex","call","arrow","addEventListener","e","preventDefault","this","contains","slideTimeline","setUpTimelines","opacity","remove","removeAttribute","resetTimelines","lastVisibleIndex","setUpVerticalTimeline","setTimeout","timelineName","id","errorPart","data","dataset","Error","slice","children","message","settingName","Object","keys","key","indexOf","triggerArray","triggerValid","push","clearTimeout","newWinWidth","jQuery","fn","opts"],"mappings":"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","file":"js/timeline.83322e43389bbf748fe1.js","sourcesContent":["function timeline(collection, options) {\r\n  const timelines = [];\r\n  const warningLabel = 'Timeline:';\r\n  let winWidth = window.innerWidth;\r\n  let resizeTimer;\r\n  let currentIndex = 0;\r\n  // Set default settings\r\n  const defaultSettings = {\r\n    forceVerticalMode: {\r\n      type: 'integer',\r\n      defaultValue: 600\r\n    },\r\n    horizontalStartPosition: {\r\n      type: 'string',\r\n      acceptedValues: ['bottom', 'top'],\r\n      defaultValue: 'top'\r\n    },\r\n    mode: {\r\n      type: 'string',\r\n      acceptedValues: ['horizontal', 'vertical'],\r\n      defaultValue: 'vertical'\r\n    },\r\n    moveItems: {\r\n      type: 'integer',\r\n      defaultValue: 1\r\n    },\r\n    startIndex: {\r\n      type: 'integer',\r\n      defaultValue: 0\r\n    },\r\n    verticalStartPosition: {\r\n      type: 'string',\r\n      acceptedValues: ['left', 'right'],\r\n      defaultValue: 'left'\r\n    },\r\n    verticalTrigger: {\r\n      type: 'string',\r\n      defaultValue: '15%'\r\n    },\r\n    visibleItems: {\r\n      type: 'integer',\r\n      defaultValue: 3\r\n    }\r\n  };\r\n\r\n  // Helper function to test whether values are an integer\r\n  function testValues(value, settingName) {\r\n    if (typeof value !== 'number' && value % 1 !== 0) {\r\n      console.warn(`${warningLabel} The value \"${value}\" entered for the setting \"${settingName}\" is not an integer.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Helper function to wrap an element in another HTML element\r\n  function itemWrap(el, wrapper, classes) {\r\n    wrapper.classList.add(classes);\r\n    el.parentNode.insertBefore(wrapper, el);\r\n    wrapper.appendChild(el);\r\n  }\r\n\r\n  // Helper function to wrap each element in a group with other HTML elements\r\n  function wrapElements(items) {\r\n    items.forEach((item) => {\r\n      itemWrap(item.querySelector('.timeline__content'), document.createElement('div'), 'timeline__content__wrap');\r\n      itemWrap(item.querySelector('.timeline__content__wrap'), document.createElement('div'), 'timeline__item__inner');\r\n    });\r\n  }\r\n\r\n  // Helper function to check if an element is partially in the viewport\r\n  function isElementInViewport(el, triggerPosition) {\r\n    const rect = el.getBoundingClientRect();\r\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n    const defaultTrigger = defaultSettings.verticalTrigger.defaultValue.match(/(\\d*\\.?\\d*)(.*)/);\r\n    let triggerUnit = triggerPosition.unit;\r\n    let triggerValue = triggerPosition.value;\r\n    let trigger = windowHeight;\r\n    if (triggerUnit === 'px' && triggerValue >= windowHeight) {\r\n      console.warn('The value entered for the setting \"verticalTrigger\" is larger than the window height. The default value will be used instead.');\r\n      [, triggerValue, triggerUnit] = defaultTrigger;\r\n    }\r\n    if (triggerUnit === 'px') {\r\n      trigger = parseInt(trigger - triggerValue, 10);\r\n    } else if (triggerUnit === '%') {\r\n      trigger = parseInt(trigger * ((100 - triggerValue) / 100), 10);\r\n    }\r\n    return (\r\n      rect.top <= trigger\r\n      && rect.left <= (window.innerWidth || document.documentElement.clientWidth)\r\n      && (rect.top + rect.height) >= 0\r\n      && (rect.left + rect.width) >= 0\r\n    );\r\n  }\r\n\r\n  // Helper function to add transform styles\r\n  function addTransforms(el, transform) {\r\n    el.style.webkitTransform = transform;\r\n    el.style.msTransform = transform;\r\n    el.style.transform = transform;\r\n  }\r\n\r\n  // Create timelines\r\n  function createTimelines(timelineEl) {\r\n    const timelineName = timelineEl.id ? `#${timelineEl.id}` : `.${timelineEl.className}`;\r\n    const errorPart = 'could not be found as a direct descendant of';\r\n    const data = timelineEl.dataset;\r\n    let wrap;\r\n    let scroller;\r\n    let items;\r\n    const settings = {};\r\n\r\n    // Test for correct HTML structure\r\n    try {\r\n      wrap = timelineEl.querySelector('.timeline__wrap');\r\n      if (!wrap) {\r\n        throw new Error(`${warningLabel} .timeline__wrap ${errorPart} ${timelineName}`);\r\n      } else {\r\n        scroller = wrap.querySelector('.timeline__items');\r\n        if (!scroller) {\r\n          throw new Error(`${warningLabel} .timeline__items ${errorPart} .timeline__wrap`);\r\n        } else {\r\n          items = [].slice.call(scroller.children, 0);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.warn(e.message);\r\n      return false;\r\n    }\r\n\r\n    // Test setting input values\r\n    Object.keys(defaultSettings).forEach((key) => {\r\n      settings[key] = defaultSettings[key].defaultValue;\r\n\r\n      if (data[key]) {\r\n        settings[key] = data[key];\r\n      } else if (options && options[key]) {\r\n        settings[key] = options[key];\r\n      }\r\n\r\n      if (defaultSettings[key].type === 'integer') {\r\n        if (!settings[key] || !testValues(settings[key], key)) {\r\n          settings[key] = defaultSettings[key].defaultValue;\r\n        }\r\n      } else if (defaultSettings[key].type === 'string') {\r\n        if (defaultSettings[key].acceptedValues && defaultSettings[key].acceptedValues.indexOf(settings[key]) === -1) {\r\n          console.warn(`${warningLabel} The value \"${settings[key]}\" entered for the setting \"${key}\" was not recognised.`);\r\n          settings[key] = defaultSettings[key].defaultValue;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Further specific testing of input values\r\n    const defaultTrigger = defaultSettings.verticalTrigger.defaultValue.match(/(\\d*\\.?\\d*)(.*)/);\r\n    const triggerArray = settings.verticalTrigger.match(/(\\d*\\.?\\d*)(.*)/);\r\n    let [, triggerValue, triggerUnit] = triggerArray;\r\n    let triggerValid = true;\r\n    if (!triggerValue) {\r\n      console.warn(`${warningLabel} No numercial value entered for the 'verticalTrigger' setting.`);\r\n      triggerValid = false;\r\n    }\r\n    if (triggerUnit !== 'px' && triggerUnit !== '%') {\r\n      console.warn(`${warningLabel} The setting 'verticalTrigger' must be a percentage or pixel value.`);\r\n      triggerValid = false;\r\n    }\r\n    if (triggerUnit === '%' && (triggerValue > 100 || triggerValue < 0)) {\r\n      console.warn(`${warningLabel} The 'verticalTrigger' setting value must be between 0 and 100 if using a percentage value.`);\r\n      triggerValid = false;\r\n    } else if (triggerUnit === 'px' && triggerValue < 0) {\r\n      console.warn(`${warningLabel} The 'verticalTrigger' setting value must be above 0 if using a pixel value.`);\r\n      triggerValid = false;\r\n    }\r\n\r\n    if (triggerValid === false) {\r\n      [, triggerValue, triggerUnit] = defaultTrigger;\r\n    }\r\n\r\n    settings.verticalTrigger = {\r\n      unit: triggerUnit,\r\n      value: triggerValue\r\n    };\r\n\r\n    if (settings.moveItems > settings.visibleItems) {\r\n      console.warn(`${warningLabel} The value of \"moveItems\" (${settings.moveItems}) is larger than the number of \"visibleItems\" (${settings.visibleItems}). The value of \"visibleItems\" has been used instead.`);\r\n      settings.moveItems = settings.visibleItems;\r\n    }\r\n\r\n    if (settings.startIndex >= (items.length - settings.visibleItems)) {\r\n      console.warn(`${warningLabel} The 'startIndex' setting must be between 0 and ${items.length - settings.visibleItems} for this timeline. The value of ${items.length - settings.visibleItems} has been used instead.`);\r\n      settings.startIndex = items.length - settings.visibleItems;\r\n    } else if (settings.startIndex < 0) {\r\n      console.warn(`${warningLabel} The 'startIndex' setting must be between 0 and ${items.length - settings.visibleItems} for this timeline. The value of 0 has been used instead.`);\r\n      settings.startIndex = 0;\r\n    }\r\n\r\n    timelines.push({\r\n      timelineEl,\r\n      wrap,\r\n      scroller,\r\n      items,\r\n      settings\r\n    });\r\n  }\r\n\r\n  if (collection.length) {\r\n    [].forEach.call(collection, createTimelines);\r\n  }\r\n\r\n  // Set height and widths of timeline elements and viewport\r\n  function setHeightandWidths(tl) {\r\n    // Set widths of items and viewport\r\n    function setWidths() {\r\n      tl.itemWidth = tl.wrap.offsetWidth / tl.settings.visibleItems;\r\n      tl.items.forEach((item) => {\r\n        item.style.width = `${tl.itemWidth}px`;\r\n      });\r\n      tl.scrollerWidth = tl.itemWidth * tl.items.length;\r\n      tl.scroller.style.width = `${tl.scrollerWidth}px`;\r\n    }\r\n\r\n    // Set height of items and viewport\r\n    function setHeights() {\r\n      let oddIndexTallest = 0;\r\n      let evenIndexTallest = 0;\r\n      tl.items.forEach((item, i) => {\r\n        item.style.height = 'auto';\r\n        const height = item.offsetHeight;\r\n        if (i % 2 === 0) {\r\n          evenIndexTallest = height > evenIndexTallest ? height : evenIndexTallest;\r\n        } else {\r\n          oddIndexTallest = height > oddIndexTallest ? height : oddIndexTallest;\r\n        }\r\n      });\r\n\r\n      const transformString = `translateY(${evenIndexTallest}px)`;\r\n      tl.items.forEach((item, i) => {\r\n        if (i % 2 === 0) {\r\n          item.style.height = `${evenIndexTallest}px`;\r\n          if (tl.settings.horizontalStartPosition === 'bottom') {\r\n            item.classList.add('timeline__item--bottom');\r\n            addTransforms(item, transformString);\r\n          } else {\r\n            item.classList.add('timeline__item--top');\r\n          }\r\n        } else {\r\n          item.style.height = `${oddIndexTallest}px`;\r\n          if (tl.settings.horizontalStartPosition !== 'bottom') {\r\n            item.classList.add('timeline__item--bottom');\r\n            addTransforms(item, transformString);\r\n          } else {\r\n            item.classList.add('timeline__item--top');\r\n          }\r\n        }\r\n      });\r\n      tl.scroller.style.height = `${evenIndexTallest + oddIndexTallest}px`;\r\n    }\r\n\r\n    if (window.innerWidth > tl.settings.forceVerticalMode) {\r\n      setWidths();\r\n      setHeights();\r\n    }\r\n  }\r\n\r\n  // Create and add arrow controls to horizontal timeline\r\n  function addNavigation(tl) {\r\n    if (tl.items.length > tl.settings.visibleItems) {\r\n      const prevArrow = document.createElement('button');\r\n      const nextArrow = document.createElement('button');\r\n      const topPosition = tl.items[0].offsetHeight;\r\n      prevArrow.className = 'timeline-nav-button timeline-nav-button--prev';\r\n      nextArrow.className = 'timeline-nav-button timeline-nav-button--next';\r\n      prevArrow.textContent = 'Previous';\r\n      nextArrow.textContent = 'Next';\r\n      prevArrow.style.top = `${topPosition}px`;\r\n      nextArrow.style.top = `${topPosition}px`;\r\n      if (currentIndex === 0) {\r\n        prevArrow.disabled = true;\r\n      } else if (currentIndex === (tl.items.length - tl.settings.visibleItems)) {\r\n        nextArrow.disabled = true;\r\n      }\r\n      tl.timelineEl.appendChild(prevArrow);\r\n      tl.timelineEl.appendChild(nextArrow);\r\n    }\r\n  }\r\n\r\n  // Add the centre line to the horizontal timeline\r\n  function addHorizontalDivider(tl) {\r\n    const divider = tl.timelineEl.querySelector('.timeline-divider');\r\n    if (divider) {\r\n      tl.timelineEl.removeChild(divider);\r\n    }\r\n    const topPosition = tl.items[0].offsetHeight;\r\n    const horizontalDivider = document.createElement('span');\r\n    horizontalDivider.className = 'timeline-divider';\r\n    horizontalDivider.style.top = `${topPosition}px`;\r\n    tl.timelineEl.appendChild(horizontalDivider);\r\n  }\r\n\r\n  // Calculate the new position of the horizontal timeline\r\n  function timelinePosition(tl) {\r\n    const position = tl.items[currentIndex].offsetLeft;\r\n    const str = `translate3d(-${position}px, 0, 0)`;\r\n    addTransforms(tl.scroller, str);\r\n  }\r\n\r\n  // Make the horizontal timeline slide\r\n  function slideTimeline(tl) {\r\n    const navArrows = tl.timelineEl.querySelectorAll('.timeline-nav-button');\r\n    const arrowPrev = tl.timelineEl.querySelector('.timeline-nav-button--prev');\r\n    const arrowNext = tl.timelineEl.querySelector('.timeline-nav-button--next');\r\n    const maxIndex = tl.items.length - tl.settings.visibleItems;\r\n    const moveItems = parseInt(tl.settings.moveItems, 10);\r\n    [].forEach.call(navArrows, (arrow) => {\r\n      arrow.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        currentIndex = this.classList.contains('timeline-nav-button--next') ? (currentIndex += moveItems) : (currentIndex -= moveItems);\r\n        if (currentIndex === 0 || currentIndex < 0) {\r\n          currentIndex = 0;\r\n          arrowPrev.disabled = true;\r\n          arrowNext.disabled = false;\r\n        } else if (currentIndex === maxIndex || currentIndex > maxIndex) {\r\n          currentIndex = maxIndex;\r\n          arrowPrev.disabled = false;\r\n          arrowNext.disabled = true;\r\n        } else {\r\n          arrowPrev.disabled = false;\r\n          arrowNext.disabled = false;\r\n        }\r\n        timelinePosition(tl);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Set up horizontal timeline\r\n  function setUpHorinzontalTimeline(tl) {\r\n    currentIndex = tl.settings.startIndex;\r\n    tl.timelineEl.classList.add('timeline--horizontal');\r\n    setHeightandWidths(tl);\r\n    timelinePosition(tl);\r\n    addNavigation(tl);\r\n    addHorizontalDivider(tl);\r\n    slideTimeline(tl);\r\n  }\r\n\r\n  // Set up vertical timeline\r\n  function setUpVerticalTimeline(tl) {\r\n    let lastVisibleIndex = 0;\r\n    tl.items.forEach((item, i) => {\r\n      item.classList.remove('animated', 'fadeIn');\r\n      if (!isElementInViewport(item, tl.settings.verticalTrigger) && i > 0) {\r\n        item.classList.add('animated');\r\n      } else {\r\n        lastVisibleIndex = i;\r\n      }\r\n      const divider = tl.settings.verticalStartPosition === 'left' ? 1 : 0;\r\n      if (i % 2 === divider && window.innerWidth > tl.settings.forceVerticalMode) {\r\n        item.classList.add('timeline__item--right');\r\n      } else {\r\n        item.classList.add('timeline__item--left');\r\n      }\r\n    });\r\n    for (let i = 0; i < lastVisibleIndex; i += 1) {\r\n      tl.items[i].classList.remove('animated', 'fadeIn');\r\n    }\r\n    // Bring elements into view as the page is scrolled\r\n    window.addEventListener('scroll', () => {\r\n      tl.items.forEach((item) => {\r\n        if (isElementInViewport(item, tl.settings.verticalTrigger)) {\r\n          item.classList.add('fadeIn');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Reset timelines\r\n  function resetTimelines(tl) {\r\n    tl.timelineEl.classList.remove('timeline--horizontal', 'timeline--mobile');\r\n    tl.scroller.removeAttribute('style');\r\n    tl.items.forEach((item) => {\r\n      item.removeAttribute('style');\r\n      item.classList.remove('animated', 'fadeIn', 'timeline__item--left', 'timeline__item--right');\r\n    });\r\n    const navArrows = tl.timelineEl.querySelectorAll('.timeline-nav-button');\r\n    [].forEach.call(navArrows, (arrow) => {\r\n      arrow.parentNode.removeChild(arrow);\r\n    });\r\n  }\r\n\r\n  // Set up the timelines\r\n  function setUpTimelines() {\r\n    timelines.forEach((tl) => {\r\n      tl.timelineEl.style.opacity = 0;\r\n      if (!tl.timelineEl.classList.contains('timeline--loaded')) {\r\n        wrapElements(tl.items);\r\n      }\r\n      resetTimelines(tl);\r\n      if (window.innerWidth <= tl.settings.forceVerticalMode) {\r\n        tl.timelineEl.classList.add('timeline--mobile');\r\n      }\r\n      if (tl.settings.mode === 'horizontal' && window.innerWidth > tl.settings.forceVerticalMode) {\r\n        setUpHorinzontalTimeline(tl);\r\n      } else {\r\n        setUpVerticalTimeline(tl);\r\n      }\r\n      tl.timelineEl.classList.add('timeline--loaded');\r\n      setTimeout(() => {\r\n        tl.timelineEl.style.opacity = 1;\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  // Initialise the timelines on the page\r\n  setUpTimelines();\r\n\r\n  window.addEventListener('resize', () => {\r\n    clearTimeout(resizeTimer);\r\n    resizeTimer = setTimeout(() => {\r\n      const newWinWidth = window.innerWidth;\r\n      if (newWinWidth !== winWidth) {\r\n        setUpTimelines();\r\n        winWidth = newWinWidth;\r\n      }\r\n    }, 250);\r\n  });\r\n}\r\n\r\n// Register as a jQuery plugin if the jQuery library is present\r\nif (window.jQuery) {\r\n  (($) => {\r\n    $.fn.timeline = function(opts) {\r\n      timeline(this, opts);\r\n      return this;\r\n    };\r\n  })(window.jQuery);\r\n}\r\n"],"sourceRoot":""}